!function(a){"use strict";function b(a,b){this.cells=[[]],this.initializeBoard(a,b)}if("undefined"==typeof a.EventEmitter)throw Error("Sudoku: Dependency EventEmitter not found.");var c=9,d=3,e=3,f=3,g=3;return a.Sudoku=b,b.prototype=Object.create(a.EventEmitter.prototype),b.prototype.initializeBoard=function(a,b){if("string"!=typeof a||a.length!==c*c)throw Error("Board size incorrect: Expected "+c+"x"+c+", but instead got "+a.length);a=a.split("").map(function(a){return parseInt(a,10)}),b=b.split("").map(function(a){return/[1-9]+/.test(a)===!0?parseInt(a,10):a});for(var d=0;c>d;d++){this.cells[d]=[];for(var e=0;c>e;e++)this.cells[d][e]={value:b[c*d+e],answer:a[c*d+e]}}if(this.isValidBoard()!==!0)throw Error("Supplied board is invalid.")},b.prototype.getCellGroups=function(){for(var a=[],b=0;b<this.cells.length;b++)a.push(this.getRow(b));for(var c=0;c<this.cells[0].length;c++)a.push(this.getColumn(c));for(var d=0;9>d;d++)a.push(this.getBox(d));return a},b.prototype.isValidBoard=function(){for(var a=this.getCellGroups(),b=0;b<a.length;b++)for(var c=0;c<a[b].length;c++){var d=a[b][c],e=[];if(null===d.answer||/[1-9]+/.test(d.answer)===!1||"undefined"!=typeof e[d.answer])return!1;e[d.answer]=!0}return!0},b.prototype.isSolved=function(){for(var a=this.getCellGroups(),b=0;b<a.length;b++)for(var c=0;c<a[b].length;c++)if(a[b][c].value!==a[b][c].answer)return!1;return!0},b.prototype.getBox=function(a){for(var b=[],c=Math.floor(a/f)*e,h=Math.floor(a%g),i=c;c+e>i;i++)b=b.concat(this.cells[i].slice(h,h+d));return b},b.prototype.getRow=function(a){return this.cells[a]},b.prototype.getColumn=function(a){for(var b=[],c=0;c<this.cells.length;c++)b.push(this.cells[c][a]);return b},b.prototype.setCell=function(a,b,c){var d=this.getCell(a,b);d!==c&&(this.cells[a][b].value=c,this.emit("cellchanged",a,b,c,d),this.isSolved()&&this.emit("solved",null))},b.prototype.getCell=function(a,b){return this.cells[a][b].value},b.prototype.getBoardSize=function(){return c},this}(this),function(a){"use strict";function b(){this.pastCommands=[],this.undoneCommands=[]}a.CommandManager=b,b.prototype={add:function(a){this.pastCommands.push(a)},undo:function(){if(0!==this.pastCommands.length){var a=this.pastCommands.pop();a.unexecute.func.apply(a.context,a.unexecute.args),this.undoneCommands.push(a)}},redo:function(){if(0!==this.undoneCommands.length){var a=this.undoneCommands.pop();a.execute.func.apply(a.context,a.execute.args),this.pastCommands.push(a)}},clear:function(){this.pastCommands=[],this.undoneCommands=[]}}}(this),function(a){"use strict";function b(a,b){this.sudoku=a,this.commandManager=b}if("undefined"==typeof a.Sudoku)throw Error("SudokuCommandManager: Dependency Sudoku not found.");if("undefined"==typeof a.CommandManager)throw Error("SudokuCommandManager: Dependency CommandManager not found.");a.SudokuCommandManager=b,b.prototype.setCell=function(a,b,c){var d=this.sudoku.getCell(a,b);this.sudoku.setCell(a,b,c),this.commandManager.add({context:this.sudoku,execute:{func:this.sudoku.setCell,args:arguments},unexecute:{func:this.sudoku.setCell,args:[a,b,d]}})}}(this),$(function(){"use strict";var a="123456789789123456456789123234567891891234567567891234345678912912345678678912345",b="      7 9 89      4    9  32       1    3      7        5  8  29    56     91  4 ",c=new Sudoku(a,b);c.on("cellchanged",function(a,b,c){$("div.cell[data-row="+a+"][data-column="+b+"]").text(c)}).on("solved",function(){d.css("visibility","visible")});for(var d=$(['<div class="solved-overlay">',"Solved!","</div>"].join("")),e=new CommandManager,f=new SudokuCommandManager(c,e),g=$("div.sudoku"),h=function(){var a=parseInt($(this).attr("data-row"),10),b=parseInt($(this).attr("data-column"),10),d=c.getCell(a,b);f.setCell(a,b," "===d?1:d%9+1)},i=$('<div class="board"></div'),j=0;j<c.getBoardSize();j++){for(var k=$('<div class="row"></div>'),l=0;l<c.getBoardSize();l++){var m=c.getCell(j,l),n=$('<div class="cell" data-row="'+j+'" data-column="'+l+'">'+(/\s/.test(m)===!0?"&nbsp;":m)+"</div>");n.on("click touch",h),n.appendTo(k)}k.appendTo(i)}i.appendTo(g),d.appendTo(g)});